---
- name: Create AWS instances
  hosts: localhost
  collections:
   - awx.awx
   - ansible.controller
  vars:
   keypair: key-frank-west
   instance_type: t2.micro
   image: ami-5b2e5722
   region: eu-west-1
   controller_hostname: 10.243.64.4
   controller_validate_certs: false
   webserver_invent: "{{ groups['webserver'] | length }}"
   webservers_to_create: "{{ webservercount | int - webserver_invent | int }}"
   webservers_to_delete: "{{ webservers_to_create |int|abs }}"
   databaseserver_invent: "{{ groups['database'] | length }}"
   databaseservers_to_create: "{{ databaseservercount | int - databaseserver_invent | int }}"
   databaseservers_to_delete: "{{ databaseservers_to_create |int|abs }}"
   loadbalancer_invent: "{{ groups['loadbalancer'] | length }}"
   loadbalancers_to_create: "{{ loadbalancercount | int - loadbalancer_invent | int }}"
   loadbalancers_to_delete: "{{ loadbalancers_to_create |int|abs }}"
  tasks:
   - name: Show calculations
     debug:
      msg: webservers_to_create is {{ webservers_to_create }} databaseservers_to_create is {{ databaseservers_to_create }} loadbalancers_to_create is {{ loadbalancers_to_create }}

   - name: Create Webserver security group
     ec2_group:
      name: webserver
      description: Webservers SC
      vpc_id: vpc-46e8ea20
      region: "{{ region }}"
      rules:
       - proto: tcp
         ports:
          - 22
          - 80
         cidr_ip: 0.0.0.0/0

   - name: Create Database security group
     ec2_group:
      name: database
      description: Webservers SC
      vpc_id: vpc-46e8ea20
      region: "{{ region }}"
      rules:
       - proto: tcp
         ports:
          - 22
          - 3128
         cidr_ip: 0.0.0.0/0

   - name: Create Loadbalancer security group
     ec2_group:
      name: loadbalancer
      description: Webservers SC
      vpc_id: vpc-46e8ea20
      region: "{{ region }}"
      rules:
       - proto: tcp
         ports:
          - 22
          - 443
         cidr_ip: 0.0.0.0/0

   - name: Launch Webserver instances
     ec2:
      key_name: "{{ keypair }}"
      group: webserver
      instance_type: "{{ instance_type }}"
      image: "{{ image }}"
      wait: true
      assign_public_ip: yes
      vpc_subnet_id: subnet-0deda245
      region: "{{ region }}"
      count: "{{ webservers_to_create }}"
      instance_tags:
       group: webserver
     when: webservers_to_create is gt "0"
     register: ec2

   - name: Launch Database instances
     ec2:
      key_name: "{{ keypair }}"
      group: database
      instance_type: "{{ instance_type }}"
      image: "{{ image }}"
      wait: true
      assign_public_ip: yes
      vpc_subnet_id: subnet-0deda245
      region: "{{ region }}"
      count: "{{ databaseservercount }}"
      instance_tags:
       group: database
     when: databaseservers_to_create is gt "0"
     register: ec2

   - name: Launch Loadbalancer instances
     ec2:
      key_name: "{{ keypair }}"
      group: loadbalancer
      instance_type: "{{ instance_type }}"
      image: "{{ image }}"
      wait: true
      assign_public_ip: yes
      vpc_subnet_id: subnet-0deda245
      region: "{{ region }}"
      count: "{{ loadbalancercount }}"
      instance_tags:
       group: loadbalancer
     when: loadbalancers_to_create is gt "0"
     register: ec2

   - name: Delete webserver instances
     ec2:
      instance_ids: "{{ item }}"
      region: "{{ region }}"
      state: absent
      wait: yes
     loop: "{{ groups['webserver'][:webservers_to_delete|int] }}"
     when: webservers_to_create is lt "0"
